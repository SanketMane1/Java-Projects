
public class Board {
	
	private char board[][];
	private int boardSize=3;
	private char symb1,symb2;
	private int count;
	
	public final static int p1win=1;
	public final static int p2win=2;
	public final static int draw=3;
	public final static int incomplete=4;
	public final static int invalid=5;
	
	
	
	public Board(char symb1, char symb2) {
		board = new char[boardSize][boardSize];
		
		for(int i=0;i< boardSize;i++) {
			for(int j=0;j<boardSize;j++) {
				board[i][j]=' ';
			}
		}
		
		
		this.symb1 = symb1;
		this.symb2 = symb2;
	}




	public int move(char s, int x, int y) {
		if(x<0 || x>=boardSize ||y<0 || y>=boardSize || board[x][y] !=' ') {
			return invalid;
		}
		board[x][y]=s;
		count++;
		
		if(board[x][0]==board[x][1]||board[x][0]==board[x][2]) {
			return s==symb1? p1win : p2win;
		}
		
		if(board[0][y]==board[1][y]||board[0][y]==board[2][y]) {
			return s==symb1? p1win : p2win;
		}
		
		if(board[0][0]!=' ' && board[0][0]==board[1][1]||board[0][0]==board[2][2]) {
			return s==symb1? p1win : p2win;
		}
		
		if(board[0][2]!=' ' && board[0][2]==board[1][1]||board[0][2]==board[2][0]) {
			return s==symb1? p1win : p2win;
		}
		
		if(count==boardSize*boardSize) {
			return draw;
		}
		
		
		return incomplete;
	}




	public void print() {
		System.out.println("--------------");
		for(int i=0;i< boardSize;i++) {
			for(int j=0;j<boardSize;j++) {
				System.out.print("| "+board[i][j]+" |");

			}
			System.out.println();
		}
		System.out.println("--------------");
		
	}
	
	
}

